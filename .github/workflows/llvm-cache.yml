name: Populate LLVM Cache

permissions:
  actions: write

on:
  workflow_dispatch:
  schedule:
    # Runs every day at 00:00 UTC: https://crontab.guru/#0_0_*_*_*
    - cron: '0 0 * * *'

jobs:
  Builds:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-22.04, cxx_compiler: clang++-15, c_compiler: clang-15, sanitizer: "address,undefined" }
          - { os: ubuntu-22.04, cxx_compiler: clang++-15, c_compiler: clang-15, shared_libs: "ON" }
          - { os: ubuntu-22.04, cxx_compiler: g++-13, c_compiler: gcc-13 }
          - { os: macos-15, cxx_compiler: clang++, c_compiler: clang }

    runs-on: ${{matrix.os}}
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout JLLVM
        uses: actions/checkout@v3
        with:
          path: JLLVM

      - name: Calculate ccache key
        id: ccache-key
        shell: pwsh
        run: |
          $key = '${{runner.os}}'

          if ('${{matrix.sanitizer}}') {
            $key += '-${{matrix.sanitizer}}'.Replace(',', '_and_')
          }
          
          if ('${{matrix.shared_libs}}' -eq 'ON') {
            $key += '-shared'
          }

          "key=$key" >> $Env:GITHUB_OUTPUT

      - name: Install Dependencies
        id: dep-install
        uses: ./JLLVM/.github/actions/dependencies
        with:
          cxx-compiler: ${{matrix.cxx_compiler}}
          ccache-key: ${{steps.ccache-key.outputs.key}}

      - name: Build LLVM
        id: llvm-build
        uses: ./JLLVM/.github/actions/llvm-build
        with:
          c-compiler: ${{matrix.c_compiler}}
          cpp-compiler: ${{matrix.cxx_compiler}}
          sanitizers: ${{matrix.sanitizer}}
          cache-key: LLVM-${{steps.dep-install.outputs.key}}
          shared_libs: ${{matrix.shared_libs}}
