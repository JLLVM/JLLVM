name: "Install build dependencies"
description: "Installs all dependencies on all platforms that are generally required to compile JLLVM"

inputs:
  cxx-compiler:
    description: "C++ compiler that will be used for compilation"
    required: true
  ccache-key:
    description: "Key to cache the ccache cache"
    required: true

outputs:
  key:
    value: ${{steps.compiler-hash.outputs.key}}
    description: "ccache-key concatenated with a hash specific to the cxx-compilers version"

runs:
  using: composite
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'oracle'

    - name: Install minimum required cmake and ninja
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: 3.20.6

    - name: Install Ubuntu dependencies
      if: ${{ runner.os == 'Linux' }}
      shell: bash
      run: |
        sudo apt update
        sudo apt remove g++-13 gcc-13 libstdc++-13-dev
        sudo apt install lld clang g++-10 g++-12 libstdc++-12-dev build-essential

    - name: Generate compiler hash
      id: compiler-hash
      shell: pwsh
      run: |
        $compiler_version = ${{inputs.cxx-compiler}} -v 2>&1 | Out-String
        $stream = [IO.MemoryStream]::new([byte[]][char[]]$compiler_version)
        $hash = (Get-FileHash -InputStream $stream -Algorithm SHA256).Hash
        "key=${{inputs.ccache-key}}-$hash" >> $Env:GITHUB_OUTPUT

    - name: Install CCache
      uses: Chocobo1/setup-ccache-action@v1
      with:
        ccache_options: |
          max_size=50M
          compiler_check=none
        override_cache_key: ${{steps.compiler-hash.outputs.key}}
